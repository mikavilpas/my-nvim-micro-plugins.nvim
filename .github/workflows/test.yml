---
name: Run tests
on:
  pull_request: ~
  push:
    branches:
      - main

jobs:
  build:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Set up dependencies
        run: |
          # ripgrep is a snacks.nvim grep dependency
          # sudo apt-get install ripgrep
          curl -LJO "https://github.com/BurntSushi/ripgrep/releases/download/14.1.0/ripgrep_14.1.0-1_amd64.deb"
          sudo dpkg -i ripgrep_14.1.0-1_amd64.deb || sudo apt-get install -f
          echo "ripgrep is installed at $(which rg) in version $(rg --version)"

          # fd is used for searching files
          sudo apt-get install fd-find
          mkdir -p ~/.local/bin
          ln -s $(which fdfind) ~/.local/bin/fd
          echo "~/.local/bin/" >> $GITHUB_PATH
          echo "fd is installed at $(which fd) in version $(fd --version)"

          # realpath is used to resolve relative paths
          which realpath || {
            # just fail with an error message if realpath is not found
            echo "realpath is not installed, but it should be part of GNU coreutils and included in Ubuntu"
            exit 1
          }
          echo "realpath is installed at $(which realpath) in version $(realpath --version)"

      - name: Run tests
        uses: nvim-neorocks/nvim-busted-action@d30f6d4d794c0e77b6edb530872205f98ae969c4 # v1.1.1
        with:
          nvim_version: nightly
          luarocks_version: "3.11.1"

      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          # https://github.com/pnpm/action-setup?tab=readme-ov-file#use-cache-to-reduce-installation-time
          run_install: false
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version-file: .nvmrc
          cache: "pnpm"
      - run: pnpm install

      # need to work around https://github.com/cypress-io/github-action/issues/1246
      - run: pnpm --filter integration-tests exec cypress install

      - name: Preinstall neovim plugins
        run: pnpm tui neovim exec "Lazy! sync"
        working-directory: packages/integration-tests

      - name: Cypress test
        uses: cypress-io/github-action@v6
        with:
          install: false
          working-directory: packages/integration-tests
          command: pnpm exec tui run

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        # add the line below to store screenshots only on failures
        # if: failure()
        if: failure()
        with:
          name: cypress-screenshots
          path: packages/integration-tests/cypress/screenshots
          if-no-files-found: ignore # 'warn' or 'error' are also available, defaults to `warn`
